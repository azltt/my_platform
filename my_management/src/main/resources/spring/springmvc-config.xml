<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- MVC注解驱动 -->
	<!--<mvc:annotation-driven/>-->
	<!-- 处理静态资源被“/”所拦截的问题 -->
	<!--<mvc:default-servlet-handler />-->

	<!-- 配置扫描器，使得@Controller注解生效 -->
	<!--<context:component-scan base-package="com.azl.controller" />-->
	<!-- <mvc:resources mapping="/img/**" location="WEB-INF/img/" />
    <mvc:resources mapping="/css/**" location="WEB-INF/css/" />
    <mvc:resources mapping="/js/**" location="WEB-INF/js/" /> -->
	<!-- 定义视图解析器 -->
	<!-- prefix="/WEB-INF/jsp/", suffix=".jsp", viewname="test" -> "/WEB-INF/jsp/test.jsp" -->
	<!--<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		&lt;!&ndash; 前缀 &ndash;&gt;
		<property name="prefix" value="/WEB-INF/pages/" />
		&lt;!&ndash; 后缀 &ndash;&gt;
		<property name="suffix" value=".jsp" />
	</bean>-->





	<!-- 处理静态资源被“/”所拦截的问题 -->
	<mvc:default-servlet-handler />
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.azl.controller" />

	<!-- 相当于注册了DefaultAnnotationHandlerMapping和AnnotationMethodHandlerAdapter两个bean，配置一些messageconverter。即解决了@Controller注解的使用前提配置。 -->
	<mvc:annotation-driven />



	<bean	id="multipartResolver"  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="1024000"></property>
		<property name="defaultEncoding" value="utf-8"/><!--属性：编码-->
	</bean>


	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/pages/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 处理在类级别上的@RequestMapping注解 <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" /> -->
	<!-- 处理在方法级别上的@RequestMapping注解 -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<!-- 默认是ISO-88859-1，避免乱码这里设置为UTF-8 -->
							<value>
								text/html;charset=UTF-8
							</value>
						</list>
					</property>
				</bean>
				<!-- 启动JSON格式的配置 -->
				<bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
					<!-- 解决 HttpMediaTypeNotAcceptableException: Could not find acceptable representation -->
					<property name="supportedMediaTypes">
						<list>
							<value>application/json;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>
	<!-- 	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        </bean> -->

	<!-- 静态资源问题，不需要进行拦截过滤，主要是针对css，js，image等资源 -->
	<!--<mvc:resources mapping="/common/**" location="/common/" cache-period="31536000" />
	<mvc:resources mapping="/dwz/**" location="/dwz/" cache-period="31536000" />
	<mvc:resources mapping="/favicon.ico" location="/favicon.ico" />-->
	<import resource="classpath:shiro/spring-mvc-shiro.xml" />
	
	
</beans>